package interactive.analyzer.gui;

import interactive.analyzer.file.tools.ImageFileFilter;
import interactive.analyzer.graph.HistogramChart;
import interactive.analyzer.graph.Chart;
import interactive.analyzer.graph.GraphPanel;
import interactive.analyzer.graph.data.HistogramDataSet;
import interactive.analyzer.graph.data.DataStatistics;
import interactive.analyzer.graph.data.HistogramPair;
import interactive.analyzer.listeners.ChartSelectionListener;
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import org.apache.log4j.Logger;

/**
 *
 * @author Drimal
 */
public class ObjectFilteringFrame extends javax.swing.JFrame {

    //TODO dynamic resize margins due to label
    private static Logger logger = Logger.getLogger(ObjectFilteringFrame.class);
    private static final Color DEFAULT_SELECTION_COLOR = Color.red;

    private HistogramDataSet originChartData;
    private Color currentSelectionColor = Color.red;

    /**
     * Creates new frame of ObjectFilteringFrame
     */
    public ObjectFilteringFrame() {
        initComponents();
        graphPanel.setSelectionColor(currentSelectionColor);
        colorThumbnail.setBackground(DEFAULT_SELECTION_COLOR);
        this.setLocationRelativeTo(null);
        logger.trace("Frame width=" + getWidth() + ", height=" + getHeight());
    }

    public void addChart(Chart chart) {
        graphPanel.setChart(chart);
        originChartData = chart.getData();
        graphPanel.updatePaint();
    }

    public GraphPanel getGraphPanel() {
        return graphPanel;
    }

    public boolean addChartSelectionListener(ChartSelectionListener listener) {
        return graphPanel.addChartSelectionListener(listener);
    }

    public boolean removeChartSelectionListener(ChartSelectionListener listener) {
        return graphPanel.removeChartSelectionListener(listener);
    }

    public void removeAllChartSelectionListeners() {
        graphPanel.removeAllChartSelectionListeners();
    }

    /** This method is called from within the constructor to
     * initializeZ the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        graphPanel = new interactive.analyzer.graph.GraphPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tagNameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        colorThumbnail = new javax.swing.JPanel();
        colorChooserButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        deleteButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        addTagButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        Save = new javax.swing.JMenuItem();
        viewMenu = new javax.swing.JMenu();
        sortingMenuItem = new javax.swing.JRadioButtonMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Object's filtering");

        graphPanel.setMinimumSize(new java.awt.Dimension(401, 249));
        graphPanel.setPreferredSize(new java.awt.Dimension(401, 249));
        graphPanel.setFocusable(true);
        graphPanel.requestFocusInWindow();

        javax.swing.GroupLayout graphPanelLayout = new javax.swing.GroupLayout(graphPanel);
        graphPanel.setLayout(graphPanelLayout);
        graphPanelLayout.setHorizontalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 408, Short.MAX_VALUE)
        );
        graphPanelLayout.setVerticalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 249, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Tags"));

        jLabel1.setText("Name:");

        jLabel2.setText("Description:");

        jLabel3.setText("Color:");

        colorThumbnail.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout colorThumbnailLayout = new javax.swing.GroupLayout(colorThumbnail);
        colorThumbnail.setLayout(colorThumbnailLayout);
        colorThumbnailLayout.setHorizontalGroup(
            colorThumbnailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );
        colorThumbnailLayout.setVerticalGroup(
            colorThumbnailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );

        colorChooserButton.setText("Choose");
        colorChooserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorChooserButtonActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tagNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(colorThumbnail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(colorChooserButton))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tagNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(colorThumbnail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(colorChooserButton))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)))
        );

        deleteButton.setText("Delete");

        saveButton.setText("Save");

        addTagButton.setText("Add");

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addTagButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(clearButton)
                        .addGap(18, 18, 18)
                        .addComponent(addTagButton)
                        .addGap(18, 18, 18)
                        .addComponent(saveButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        fileMenu.setText("File");

        Save.setText("Save graph as...");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        fileMenu.add(Save);

        jMenuBar1.add(fileMenu);

        viewMenu.setText("View");

        sortingMenuItem.setText("Sorting");
        sortingMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortingMenuItemActionPerformed(evt);
            }
        });
        viewMenu.add(sortingMenuItem);

        jMenuBar1.add(viewMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(graphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(graphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        JFileChooser fc = new JFileChooser();

        fc.removeChoosableFileFilter(fc.getFileFilter());
        for (FileFilter filter : graphPanel.getFileFilters()) {
            fc.addChoosableFileFilter(filter);
        }
        int returnVal = fc.showSaveDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();

            try {
                graphPanel.save(file, (ImageFileFilter) fc.getFileFilter());
            } catch (IOException ex) {
            }
        }
    }//GEN-LAST:event_SaveActionPerformed

    private void sortingMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortingMenuItemActionPerformed
        if (sortingMenuItem.isSelected()) {
            HistogramDataSet dataCopy = DataStatistics.createNewInstanceOfData(originChartData);
            dataCopy.sortHistogramPairs();
            graphPanel.getChart().loadData(dataCopy);
            graphPanel.updatePaint();
        } else {
            graphPanel.getChart().loadData(originChartData);
            graphPanel.updatePaint();
        }
    }//GEN-LAST:event_sortingMenuItemActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        graphPanel.clearAllSelections();

    }//GEN-LAST:event_clearButtonActionPerformed

    private void colorChooserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorChooserButtonActionPerformed
        currentSelectionColor = JColorChooser.showDialog(null,
                "Color chooser", DEFAULT_SELECTION_COLOR);
        colorThumbnail.setBackground(currentSelectionColor);
        graphPanel.setSelectionColor(currentSelectionColor);
    }//GEN-LAST:event_colorChooserButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ObjectFilteringFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ObjectFilteringFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ObjectFilteringFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ObjectFilteringFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ObjectFilteringFrame frame = new ObjectFilteringFrame();
                Chart chart = new HistogramChart();
                chart.setColumnName("ColumnA");
                HistogramDataSet dataSet = new HistogramDataSet();
//                dataSet.setMinValue(35);
//                dataSet.setMaxValue(140);
//                dataSet.setMinOccurence(1);
//                dataSet.setMaxOccurence(6);
//                dataSet.addPair(new HistogramPair(1, 60, 1));
//                dataSet.addPair(new HistogramPair(2, 40, 2));
//                dataSet.addPair(new HistogramPair(3, 80, 3));
//                dataSet.addPair(new HistogramPair(4, 120, 1));
//                dataSet.addPair(new HistogramPair(5, 140, 5));
//                dataSet.addPair(new HistogramPair(6, 35, 6));
//                dataSet.addPair(new HistogramPair(7, 110, 1));
//                dataSet.setMedianValue(80);dataSet.addPair(new HistogramPair(1,1.0,19));
                dataSet.addPair(new HistogramPair(1, 1.0, 19));
                dataSet.addPair(new HistogramPair(2, 9.0, 3));
                dataSet.addPair(new HistogramPair(3, 17.0, 4));
                dataSet.addPair(new HistogramPair(4, 26.0, 1));
                dataSet.addPair(new HistogramPair(5, 34.0, 1));
                dataSet.addPair(new HistogramPair(6, 42.0, 0));
                dataSet.addPair(new HistogramPair(7, 50.0, 4));
                dataSet.addPair(new HistogramPair(8, 58.0, 0));
                dataSet.addPair(new HistogramPair(9, 67.0, 3));
                dataSet.addPair(new HistogramPair(10, 75.0, 1));
                dataSet.addPair(new HistogramPair(11, 83.0, 3));
                dataSet.addPair(new HistogramPair(12, 91.0, 2));
                dataSet.addPair(new HistogramPair(13, 99.0, 2));
                dataSet.addPair(new HistogramPair(14, 108.0, 1));
                dataSet.addPair(new HistogramPair(15, 116.0, 2));
                dataSet.addPair(new HistogramPair(16, 124.0, 0));
                dataSet.addPair(new HistogramPair(17, 132.0, 1));
                dataSet.addPair(new HistogramPair(18, 141.0, 1));
                dataSet.addPair(new HistogramPair(19, 149.0, 1));
                dataSet.addPair(new HistogramPair(20, 157.0, 2));
                dataSet.addPair(new HistogramPair(21, 165.0, 1));
                dataSet.addPair(new HistogramPair(22, 173.0, 1));
                dataSet.addPair(new HistogramPair(23, 182.0, 1));
                dataSet.addPair(new HistogramPair(24, 190.0, 1));
                dataSet.addPair(new HistogramPair(25, 198.0, 1));
                dataSet.addPair(new HistogramPair(26, 206.0, 0));
                dataSet.addPair(new HistogramPair(27, 214.0, 0));
                dataSet.addPair(new HistogramPair(28, 223.0, 4));
                dataSet.addPair(new HistogramPair(29, 231.0, 0));
                dataSet.addPair(new HistogramPair(30, 239.0, 2));
                dataSet.addPair(new HistogramPair(31, 247.0, 0));
                dataSet.addPair(new HistogramPair(32, 255.0, 1));
                dataSet.addPair(new HistogramPair(33, 264.0, 0));
                dataSet.addPair(new HistogramPair(34, 272.0, 1));
                dataSet.addPair(new HistogramPair(35, 280.0, 1));
                dataSet.addPair(new HistogramPair(36, 288.0, 0));
                dataSet.addPair(new HistogramPair(37, 296.0, 0));
                dataSet.addPair(new HistogramPair(38, 305.0, 1));
                dataSet.addPair(new HistogramPair(39, 313.0, 0));
                dataSet.addPair(new HistogramPair(40, 321.0, 0));
                dataSet.addPair(new HistogramPair(41, 329.0, 3));
                dataSet.addPair(new HistogramPair(42, 337.0, 1));
                dataSet.addPair(new HistogramPair(43, 346.0, 1));
                dataSet.addPair(new HistogramPair(44, 354.0, 0));
                dataSet.addPair(new HistogramPair(45, 362.0, 0));
                dataSet.addPair(new HistogramPair(46, 370.0, 1));
                dataSet.addPair(new HistogramPair(47, 379.0, 2));
                dataSet.addPair(new HistogramPair(48, 387.0, 1));
                dataSet.addPair(new HistogramPair(49, 395.0, 0));
                dataSet.addPair(new HistogramPair(50, 403.0, 0));
                dataSet.addPair(new HistogramPair(51, 411.0, 1));
                dataSet.addPair(new HistogramPair(52, 420.0, 0));
                dataSet.addPair(new HistogramPair(53, 428.0, 0));
                dataSet.addPair(new HistogramPair(54, 436.0, 4));
                dataSet.addPair(new HistogramPair(55, 444.0, 0));
                dataSet.addPair(new HistogramPair(56, 452.0, 2));
                dataSet.addPair(new HistogramPair(57, 461.0, 1));
                dataSet.addPair(new HistogramPair(58, 469.0, 1));
                dataSet.addPair(new HistogramPair(59, 477.0, 1));
                dataSet.addPair(new HistogramPair(60, 485.0, 2));
                dataSet.addPair(new HistogramPair(61, 493.0, 0));
                dataSet.addPair(new HistogramPair(62, 502.0, 1));
                dataSet.addPair(new HistogramPair(63, 510.0, 0));
                dataSet.addPair(new HistogramPair(64, 518.0, 0));
                dataSet.addPair(new HistogramPair(65, 526.0, 0));
                dataSet.addPair(new HistogramPair(66, 534.0, 0));
                dataSet.addPair(new HistogramPair(67, 543.0, 0));
                dataSet.addPair(new HistogramPair(68, 551.0, 2));
                dataSet.addPair(new HistogramPair(69, 559.0, 0));
                dataSet.addPair(new HistogramPair(70, 567.0, 0));
                dataSet.addPair(new HistogramPair(71, 575.0, 1));
                dataSet.addPair(new HistogramPair(72, 584.0, 0));
                dataSet.addPair(new HistogramPair(73, 592.0, 0));
                dataSet.addPair(new HistogramPair(74, 600.0, 0));
                dataSet.addPair(new HistogramPair(75, 608.0, 1));
                dataSet.addPair(new HistogramPair(76, 617.0, 0));
                dataSet.addPair(new HistogramPair(77, 625.0, 0));
                dataSet.addPair(new HistogramPair(78, 633.0, 0));
                dataSet.addPair(new HistogramPair(79, 641.0, 0));
                dataSet.addPair(new HistogramPair(80, 649.0, 0));
                dataSet.addPair(new HistogramPair(81, 658.0, 0));
                dataSet.addPair(new HistogramPair(82, 666.0, 0));
                dataSet.addPair(new HistogramPair(83, 674.0, 0));
                dataSet.addPair(new HistogramPair(84, 682.0, 0));
                dataSet.addPair(new HistogramPair(85, 690.0, 0));
                dataSet.addPair(new HistogramPair(86, 699.0, 0));
                dataSet.addPair(new HistogramPair(87, 707.0, 1));
                dataSet.addPair(new HistogramPair(88, 715.0, 1));
                dataSet.addPair(new HistogramPair(89, 723.0, 1));
                dataSet.addPair(new HistogramPair(90, 731.0, 0));
                dataSet.addPair(new HistogramPair(91, 740.0, 0));
                dataSet.addPair(new HistogramPair(92, 748.0, 2));
                dataSet.addPair(new HistogramPair(93, 756.0, 1));
                dataSet.addPair(new HistogramPair(94, 764.0, 2));
                dataSet.addPair(new HistogramPair(95, 772.0, 1));
                dataSet.addPair(new HistogramPair(96, 781.0, 0));
                dataSet.addPair(new HistogramPair(97, 789.0, 0));
                dataSet.addPair(new HistogramPair(98, 797.0, 1));
                dataSet.addPair(new HistogramPair(99, 805.0, 0));
                dataSet.addPair(new HistogramPair(100, 813.0, 0));
                dataSet.addPair(new HistogramPair(101, 822.0, 0));
                dataSet.addPair(new HistogramPair(102, 830.0, 0));
                dataSet.addPair(new HistogramPair(103, 838.0, 0));
                dataSet.addPair(new HistogramPair(104, 846.0, 0));
                dataSet.addPair(new HistogramPair(105, 855.0, 1));
                dataSet.addPair(new HistogramPair(106, 863.0, 0));
                dataSet.addPair(new HistogramPair(107, 871.0, 0));
                dataSet.addPair(new HistogramPair(108, 879.0, 0));
                dataSet.addPair(new HistogramPair(109, 887.0, 0));
                dataSet.addPair(new HistogramPair(110, 896.0, 0));
                dataSet.addPair(new HistogramPair(111, 904.0, 0));
                dataSet.addPair(new HistogramPair(112, 912.0, 2));
                dataSet.addPair(new HistogramPair(113, 920.0, 1));
                dataSet.addPair(new HistogramPair(114, 928.0, 0));
                dataSet.addPair(new HistogramPair(115, 937.0, 1));
                dataSet.addPair(new HistogramPair(116, 945.0, 0));
                dataSet.addPair(new HistogramPair(117, 953.0, 0));
                dataSet.addPair(new HistogramPair(118, 961.0, 0));
                dataSet.addPair(new HistogramPair(119, 969.0, 0));
                dataSet.addPair(new HistogramPair(120, 978.0, 0));
                dataSet.addPair(new HistogramPair(121, 986.0, 0));
                dataSet.addPair(new HistogramPair(122, 994.0, 0));
                dataSet.addPair(new HistogramPair(123, 1002.0, 1));
                dataSet.addPair(new HistogramPair(124, 1010.0, 1));
                dataSet.addPair(new HistogramPair(125, 1019.0, 0));
                dataSet.addPair(new HistogramPair(126, 1027.0, 0));
                dataSet.addPair(new HistogramPair(127, 1035.0, 1));
                dataSet.addPair(new HistogramPair(128, 1043.0, 0));
                dataSet.addPair(new HistogramPair(129, 1052.0, 0));
                dataSet.addPair(new HistogramPair(130, 1060.0, 0));
                dataSet.addPair(new HistogramPair(131, 1068.0, 0));
                dataSet.addPair(new HistogramPair(132, 1076.0, 0));
                dataSet.addPair(new HistogramPair(133, 1084.0, 0));
                dataSet.addPair(new HistogramPair(134, 1093.0, 0));
                dataSet.addPair(new HistogramPair(135, 1101.0, 0));
                dataSet.addPair(new HistogramPair(136, 1109.0, 0));
                dataSet.addPair(new HistogramPair(137, 1117.0, 0));
                dataSet.addPair(new HistogramPair(138, 1125.0, 0));
                dataSet.addPair(new HistogramPair(139, 1134.0, 0));
                dataSet.addPair(new HistogramPair(140, 1142.0, 0));
                dataSet.addPair(new HistogramPair(141, 1150.0, 0));
                dataSet.addPair(new HistogramPair(142, 1158.0, 0));
                dataSet.addPair(new HistogramPair(143, 1166.0, 0));
                dataSet.addPair(new HistogramPair(144, 1175.0, 0));
                dataSet.addPair(new HistogramPair(145, 1183.0, 0));
                dataSet.addPair(new HistogramPair(146, 1191.0, 0));
                dataSet.addPair(new HistogramPair(147, 1199.0, 0));
                dataSet.addPair(new HistogramPair(148, 1207.0, 1));
                dataSet.addPair(new HistogramPair(149, 1216.0, 0));
                dataSet.addPair(new HistogramPair(150, 1224.0, 0));
                dataSet.addPair(new HistogramPair(151, 1232.0, 0));
                dataSet.addPair(new HistogramPair(152, 1240.0, 0));
                dataSet.addPair(new HistogramPair(153, 1248.0, 0));
                dataSet.addPair(new HistogramPair(154, 1257.0, 0));
                dataSet.addPair(new HistogramPair(155, 1265.0, 0));
                dataSet.addPair(new HistogramPair(156, 1273.0, 0));
                dataSet.addPair(new HistogramPair(157, 1281.0, 1));
                dataSet.addPair(new HistogramPair(158, 1290.0, 0));
                dataSet.addPair(new HistogramPair(159, 1298.0, 0));
                dataSet.addPair(new HistogramPair(160, 1306.0, 0));
                dataSet.addPair(new HistogramPair(161, 1314.0, 0));
                dataSet.addPair(new HistogramPair(162, 1322.0, 0));
                dataSet.addPair(new HistogramPair(163, 1331.0, 0));
                dataSet.addPair(new HistogramPair(164, 1339.0, 0));
                dataSet.addPair(new HistogramPair(165, 1347.0, 0));
                dataSet.addPair(new HistogramPair(166, 1355.0, 0));
                dataSet.addPair(new HistogramPair(167, 1363.0, 0));
                dataSet.addPair(new HistogramPair(168, 1372.0, 0));
                dataSet.addPair(new HistogramPair(169, 1380.0, 0));
                dataSet.addPair(new HistogramPair(170, 1388.0, 0));
                dataSet.addPair(new HistogramPair(171, 1396.0, 0));
                dataSet.addPair(new HistogramPair(172, 1404.0, 0));
                dataSet.addPair(new HistogramPair(173, 1413.0, 1));
                dataSet.addPair(new HistogramPair(174, 1421.0, 0));
                dataSet.addPair(new HistogramPair(175, 1429.0, 0));
                dataSet.addPair(new HistogramPair(176, 1437.0, 0));
                dataSet.addPair(new HistogramPair(177, 1445.0, 1));
                dataSet.addPair(new HistogramPair(178, 1454.0, 0));
                dataSet.addPair(new HistogramPair(179, 1462.0, 0));
                dataSet.addPair(new HistogramPair(180, 1470.0, 0));
                dataSet.addPair(new HistogramPair(181, 1478.0, 0));
                dataSet.addPair(new HistogramPair(182, 1486.0, 0));
                dataSet.addPair(new HistogramPair(183, 1495.0, 0));
                dataSet.addPair(new HistogramPair(184, 1503.0, 0));
                dataSet.addPair(new HistogramPair(185, 1511.0, 0));
                dataSet.addPair(new HistogramPair(186, 1519.0, 0));
                dataSet.addPair(new HistogramPair(187, 1528.0, 0));
                dataSet.addPair(new HistogramPair(188, 1536.0, 0));
                dataSet.addPair(new HistogramPair(189, 1544.0, 0));
                dataSet.addPair(new HistogramPair(190, 1552.0, 0));
                dataSet.addPair(new HistogramPair(191, 1560.0, 0));
                dataSet.addPair(new HistogramPair(192, 1569.0, 0));
                dataSet.addPair(new HistogramPair(193, 1577.0, 0));
                dataSet.addPair(new HistogramPair(194, 1585.0, 0));
                dataSet.addPair(new HistogramPair(195, 1593.0, 0));
                dataSet.addPair(new HistogramPair(196, 1601.0, 0));
                dataSet.addPair(new HistogramPair(197, 1610.0, 1));
                dataSet.addPair(new HistogramPair(198, 1618.0, 0));
                dataSet.addPair(new HistogramPair(199, 1626.0, 0));
                dataSet.addPair(new HistogramPair(200, 1634.0, 0));
                dataSet.addPair(new HistogramPair(201, 1642.0, 0));
                dataSet.addPair(new HistogramPair(202, 1651.0, 0));
                dataSet.addPair(new HistogramPair(203, 1659.0, 0));
                dataSet.addPair(new HistogramPair(204, 1667.0, 0));
                dataSet.addPair(new HistogramPair(205, 1675.0, 0));
                dataSet.addPair(new HistogramPair(206, 1683.0, 0));
                dataSet.addPair(new HistogramPair(207, 1692.0, 0));
                dataSet.addPair(new HistogramPair(208, 1700.0, 0));
                dataSet.addPair(new HistogramPair(209, 1708.0, 0));
                dataSet.addPair(new HistogramPair(210, 1716.0, 0));
                dataSet.addPair(new HistogramPair(211, 1724.0, 0));
                dataSet.addPair(new HistogramPair(212, 1733.0, 0));
                dataSet.addPair(new HistogramPair(213, 1741.0, 0));
                dataSet.addPair(new HistogramPair(214, 1749.0, 0));
                dataSet.addPair(new HistogramPair(215, 1757.0, 0));
                dataSet.addPair(new HistogramPair(216, 1766.0, 0));
                dataSet.addPair(new HistogramPair(217, 1774.0, 1));
                dataSet.addPair(new HistogramPair(218, 1782.0, 0));
                dataSet.addPair(new HistogramPair(219, 1790.0, 0));
                dataSet.addPair(new HistogramPair(220, 1798.0, 0));
                dataSet.addPair(new HistogramPair(221, 1807.0, 0));
                dataSet.addPair(new HistogramPair(222, 1815.0, 0));
                dataSet.addPair(new HistogramPair(223, 1823.0, 0));
                dataSet.addPair(new HistogramPair(224, 1831.0, 0));
                dataSet.addPair(new HistogramPair(225, 1839.0, 0));
                dataSet.addPair(new HistogramPair(226, 1848.0, 0));
                dataSet.addPair(new HistogramPair(227, 1856.0, 0));
                dataSet.addPair(new HistogramPair(228, 1864.0, 0));
                dataSet.addPair(new HistogramPair(229, 1872.0, 0));
                dataSet.addPair(new HistogramPair(230, 1880.0, 0));
                dataSet.addPair(new HistogramPair(231, 1889.0, 0));
                dataSet.addPair(new HistogramPair(232, 1897.0, 0));
                dataSet.addPair(new HistogramPair(233, 1905.0, 0));
                dataSet.addPair(new HistogramPair(234, 1913.0, 0));
                dataSet.addPair(new HistogramPair(235, 1921.0, 0));
                dataSet.addPair(new HistogramPair(236, 1930.0, 0));
                dataSet.addPair(new HistogramPair(237, 1938.0, 0));
                dataSet.addPair(new HistogramPair(238, 1946.0, 0));
                dataSet.addPair(new HistogramPair(239, 1954.0, 0));
                dataSet.addPair(new HistogramPair(240, 1962.0, 0));
                dataSet.addPair(new HistogramPair(241, 1971.0, 0));
                dataSet.addPair(new HistogramPair(242, 1979.0, 0));
                dataSet.addPair(new HistogramPair(243, 1987.0, 0));
                dataSet.addPair(new HistogramPair(244, 1995.0, 0));
                dataSet.addPair(new HistogramPair(245, 2004.0, 0));
                dataSet.addPair(new HistogramPair(246, 2012.0, 1));
                dataSet.addPair(new HistogramPair(247, 2020.0, 0));
                dataSet.addPair(new HistogramPair(248, 2028.0, 0));
                dataSet.addPair(new HistogramPair(249, 2036.0, 0));
                dataSet.addPair(new HistogramPair(250, 2045.0, 0));
                dataSet.addPair(new HistogramPair(251, 2053.0, 0));
                dataSet.addPair(new HistogramPair(252, 2061.0, 0));
                dataSet.addPair(new HistogramPair(253, 2069.0, 0));
                dataSet.addPair(new HistogramPair(254, 2077.0, 0));
                dataSet.addPair(new HistogramPair(255, 2086.0, 0));
                dataSet.addPair(new HistogramPair(256, 2094.0, 0));
                dataSet.setMaxOccurence(19);
                dataSet.setMinOccurence(0);
                dataSet.setMaxValue(2102);
                dataSet.setMinValue(1);

                chart.loadData(dataSet);
                frame.addChart(chart);
                frame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Save;
    private javax.swing.JButton addTagButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton colorChooserButton;
    private javax.swing.JPanel colorThumbnail;
    private javax.swing.JButton deleteButton;
    private javax.swing.JMenu fileMenu;
    private interactive.analyzer.graph.GraphPanel graphPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JButton saveButton;
    private javax.swing.JRadioButtonMenuItem sortingMenuItem;
    private javax.swing.JTextField tagNameField;
    private javax.swing.JMenu viewMenu;
    // End of variables declaration//GEN-END:variables
}
