/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package gui;

import java.io.File;
import java.util.Map;
import java.util.List;
import javax.swing.AbstractButton;

/**
 *
 * @author Drimal
 */
public class ChanelListElement extends javax.swing.JPanel {
    private String label;
    private File file;
    private int index;
    Map<File, List<Integer>> map;

    public ChanelListElement(String name, File file, int index, Map<File, List<Integer>> map) {
        initComponents();
        label = name;
        this.file = file;
        NameLabel.setText(label);
        this.index = index;
        this.map = map;
    }

    public String getLabel(){
        return label;
    }
    
    public int getIndex(){
        return index;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SelectCheckbox = new javax.swing.JCheckBox();
        NameLabel = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(150, 30));

        SelectCheckbox.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        SelectCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectCheckboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SelectCheckbox)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SelectCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SelectCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectCheckboxActionPerformed
        AbstractButton button = (AbstractButton) evt.getSource();
        Integer elem = new Integer(index);
        List<Integer> values = map.get(file);
        if(button.getModel().isSelected()){
            values.add(elem);      
        }else{
            values.remove(elem);
        }
        map.put(file, values);
    }//GEN-LAST:event_SelectCheckboxActionPerformed
    
    public javax.swing.JCheckBox getCheckBox(){
        return SelectCheckbox;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NameLabel;
    public javax.swing.JCheckBox SelectCheckbox;
    // End of variables declaration//GEN-END:variables
}
